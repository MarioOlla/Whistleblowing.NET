// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Whistleblowing.NETAPI.Data;

#nullable disable

namespace Whistleblowing.NETAPI.Migrations
{
    [DbContext(typeof(WhistleBlowingContext))]
    partial class WhistleBlowingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Whistleblowing.NETAPI.Models.Ruolo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ruolo_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("codice")
                        .HasColumnType("int")
                        .HasColumnName("codice");

                    b.Property<string>("descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descrizione");

                    b.HasKey("Id");

                    b.ToTable("Ruolo");
                });

            modelBuilder.Entity("Whistleblowing.NETAPI.Models.SegnalazioneAnonymous", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("segnalazione_regular_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AmmontarePagamentoOAltraUtilita")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ammontare_pagamento_o_altra_utilita");

                    b.Property<string>("AreaAziendale")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("area_aziendale");

                    b.Property<string>("CircostanzeViolenzaMinaccia")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("circostanze_violenza_minaccia");

                    b.Property<DateTime?>("DataEvento")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_evento");

                    b.Property<string>("DescrizioneFatto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descrizione_fatto");

                    b.Property<string>("FattoRiferitoA")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fatto_riferito_a");

                    b.Property<string>("ImpreseCoinvolte")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("imprese_coinvolte");

                    b.Property<bool?>("IsExternal")
                        .HasColumnType("bit")
                        .HasColumnName("is_external");

                    b.Property<string>("LuogoEvento")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("luogo_evento");

                    b.Property<string>("ModalitaConoscenzaFatto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modalita_conoscenza_fatto");

                    b.Property<string>("MotivazioneFattoIllecito")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("motivazione_fatto_illecito");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note");

                    b.Property<string>("PubbliciUfficialiPaCoinvolti")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pubblici_ufficiali_pa_coinvolti");

                    b.Property<string>("SoggettiPrivatiCoinvolti")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("soggetti_privati_coinvolti");

                    b.Property<string>("SoggettiReferentiFatto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("soggetti_referenti_fatto");

                    b.Property<string>("SoggettoColpevole")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("soggetto_colpevole");

                    b.Property<int>("UserHashed")
                        .HasColumnType("int")
                        .HasColumnName("user_hashed");

                    b.Property<int?>("status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("SegnalazioneAnonymous");
                });

            modelBuilder.Entity("Whistleblowing.NETAPI.Models.SegnalazioneRegular", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("segnalazione_regular_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AmmontarePagamentoOAltraUtilita")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ammontare_pagamento_o_altra_utilita");

                    b.Property<string>("AreaAziendale")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("area_aziendale");

                    b.Property<string>("CircostanzeViolenzaMinaccia")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("circostanze_violenza_minaccia");

                    b.Property<DateTime?>("DataEvento")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_evento");

                    b.Property<string>("DescrizioneFatto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descrizione_fatto");

                    b.Property<string>("FattoRiferitoA")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fatto_riferito_a");

                    b.Property<string>("ImpreseCoinvolte")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("imprese_coinvolte");

                    b.Property<bool?>("IsExternal")
                        .HasColumnType("bit")
                        .HasColumnName("is_external");

                    b.Property<string>("LuogoEvento")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("luogo_evento");

                    b.Property<string>("ModalitaConoscenzaFatto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modalita_conoscenza_fatto");

                    b.Property<string>("MotivazioneFattoIllecito")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("motivazione_fatto_illecito");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note");

                    b.Property<string>("PubbliciUfficialiPaCoinvolti")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pubblici_ufficiali_pa_coinvolti");

                    b.Property<string>("SoggettiPrivatiCoinvolti")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("soggetti_privati_coinvolti");

                    b.Property<string>("SoggettiReferentiFatto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("soggetti_referenti_fatto");

                    b.Property<string>("SoggettoColpevole")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("soggetto_colpevole");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int?>("status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("segnalazioneRegulars");
                });

            modelBuilder.Entity("Whistleblowing.NETAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Azienda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("azienda");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cognome");

                    b.Property<DateTime>("DataNascita")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_nascita");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<bool>("IsLoggedIn")
                        .HasColumnType("bit")
                        .HasColumnName("isLoggedIn");

                    b.Property<string>("LuogoNascita")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("luogo_nascita");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("Posizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("posizione");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("provincia");

                    b.Property<int?>("RuoloId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("telefono");

                    b.HasKey("Id");

                    b.HasIndex("RuoloId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Whistleblowing.NETAPI.Models.User", b =>
                {
                    b.HasOne("Whistleblowing.NETAPI.Models.Ruolo", "Ruolo")
                        .WithMany()
                        .HasForeignKey("RuoloId");

                    b.Navigation("Ruolo");
                });
#pragma warning restore 612, 618
        }
    }
}
